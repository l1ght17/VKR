import streamlit as st
try:
    import reveal_slides as rs
except ImportError:
    rs = None

def presentation_page():
    st.title("Презентация проекта: Предиктивное обслуживание")

    if rs is not None:
        st.markdown("ℹ️ **Используйте клавиши стрелок ← / → или свайп для перехода между слайдами**")

        # Презентация с использованием streamlit-reveal-slides
        presentation_markdown = """
        # Предиктивное обслуживание оборудования
        ---
        ## Введение
        - **Цель**: Предсказать отказ оборудования с помощью бинарной классификации.
        - **Датасет**: AI4I 2020 Predictive Maintenance Dataset (10 000 записей, 14 признаков).
        ---
        ## Описание данных
        - **Признаки**: Тип, температура воздуха, температура процесса, скорость вращения, крутящий момент, износ инструмента.
        - **Целевая переменная**: Отказ оборудования (0 = нет отказа, 1 = отказ).
        ---
        ## Этапы работы
        1. Загрузка и предобработка данных.
        2. Обучение моделей (Logistic Regression, Random Forest).
        3. Оценка моделей: Accuracy, ROC-AUC, Confusion Matrix.
        4. Создание Streamlit-приложения для анализа и предсказаний.
        ---
        ## Результаты
        - Модели достигают высокой точности и AUC.
        - Интерактивное приложение позволяет делать предсказания в реальном времени.
        ---
        ## Заключение
        - Успешная реализация системы предиктивного обслуживания.
        - Возможные улучшения: XGBoost, подбор гиперпараметров.
        """

        theme = st.selectbox("Тема", ["serif", "simple", "solarized"], index=0)
        height = st.number_input("Высота слайдов", value=500)
        transition = st.selectbox("Переход между слайдами", ["slide", "convex", "concave", "zoom", "none"])
        plugins = st.multiselect("Плагины", ["highlight", "katex", "notes", "search", "zoom"], [])

        rs.slides(
            presentation_markdown,
            height=height,
            theme=theme,
            config={"transition": transition, "plugins": plugins},
            markdown_props={"data-separator": "^---$"}  # определение разделителя слайдов
        )
    else:
        st.markdown("⚠️ Библиотека `streamlit-reveal-slides` не установлена. Отображение презентации в виде текста.")
        st.markdown("""
        # Предиктивное обслуживание оборудования
        ## Введение
        - **Цель**: Предсказать отказ оборудования с помощью бинарной классификации.
        - **Датасет**: AI4I 2020 Predictive Maintenance Dataset (10 000 записей, 14 признаков).

        ## Описание данных
        - **Признаки**: Тип, температура воздуха, температура процесса, скорость вращения, крутящий момент, износ инструмента.
        - **Целевая переменная**: Отказ оборудования (0 = нет, 1 = да).

        ## Этапы работы
        1. Загрузка и предобработка данных.
        2. Обучение моделей (Logistic Regression, Random Forest).
        3. Оценка моделей: Accuracy, ROC-AUC, Confusion Matrix.
        4. Создание Streamlit-приложения для анализа и предсказаний.

        ## Результаты
        - Модели достигают высокой точности и AUC.
        - Интерактивное приложение позволяет делать предсказания в реальном времени.

        ## Заключение
        - Успешная реализация системы предиктивного обслуживания.
        - Возможные улучшения: XGBoost, подбор гиперпараметров.
        """)
