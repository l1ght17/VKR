# Веб-приложение для предиктивного обслуживания

Это веб-приложение, разработанное на основе Streamlit, предназначено для предиктивного обслуживания оборудования. Оно использует [датасет AI4I 2020 Predictive Maintenance Dataset](https://archive.ics.uci.edu/dataset/601/predictive+maintenance+dataset) (UCI ID 601) для прогнозирования отказов оборудования. Приложение поддерживает загрузку данных, их предобработку, обучение моделей, оценку производительности и прогнозирование отказов в реальном времени. Интерфейс полностью на русском языке, что делает его удобным для русскоязычных пользователей.

## Основные возможности
- **Загрузка данных**: Поддержка загрузки CSV-файлов или автоматическое получение данных из репозитория UCI.
- **Предобработка**: Удаление ненужных столбцов, кодирование категориальных признаков, масштабирование числовых признаков.
- **Обучение моделей**: Логистическая регрессия, Случайный лес, XGBoost и SVM с калибровкой вероятностей.
- **Оценка моделей**: Метрики точности, ROC-AUC, матрица ошибок, отчет по классификации, кривые калибровки и распределение вероятностей.
- **Прогнозирование**: Интерактивный интерфейс для ввода признаков и получения прогнозов (Отказ/Нет отказа) с вероятностью отказа.
- **Презентация**: Слайды с описанием проекта, реализованные с помощью `streamlit-reveal-slides`.

## Требования
Для работы приложения необходим Python 3.8+ и следующие библиотеки, указанные в `requirements.txt`:
- streamlit==1.41.0
- pandas==1.5.3
- scikit-learn==1.2.0
- matplotlib==3.6.2
- seaborn==0.12.1
- ucimlrepo==0.0.3
- xgboost==1.7.6
- streamlit-reveal-slides==0.1.0
- imbalanced-learn==0.9.0

## Установка
1. Клонируйте репозиторий или скачайте файлы проекта:
   ```bash
   git clone <URL_репозитория>
   cd predictive-maintenance
   ```
2. Создайте виртуальное окружение (рекомендуется):
   ```bash
   python -m venv venv
   source venv/bin/activate  # На Windows: venv\Scripts\activate
   ```
3. Установите зависимости:
   ```bash
   pip install -r requirements.txt
   ```
4. Запустите приложение:
   ```bash
   streamlit run app.py
   ```

## Использование
1. **Запуск приложения**:
   После выполнения `streamlit run app.py` откроется веб-интерфейс в браузере (обычно по адресу `http://localhost:8501`).
2. **Навигация**:
   - Используйте боковую панель для переключения между страницами: **Анализ и модель** и **Презентация**.
3. **Анализ и модель**:
   - **Загрузка данных**:
     - Выберите "Загрузить CSV" и загрузите файл, содержащий столбцы: Тип, Температура воздуха [K], Температура процесса [K], Скорость вращения [об/мин], Крутящий момент [Нм], Износ инструмента [мин], Отказ машины.
     - Или выберите "Получить из репозитория UCI" для автоматической загрузки датасета AI4I 2020.
   - **Предобработка**:
     - Приложение удаляет ненужные столбцы (UDI, Product ID, TWF, HDF, PWF, OSF, RNF), кодирует категориальный признак Тип и масштабирует числовые признаки.
   - **Обучение модели**:
     - Выберите модель (Логистическая регрессия, Случайный лес, XGBoost, SVM) и нажмите "Обучить модель".
     - Просмотрите результаты: точность, ROC-AUC, отчет по классификации, матрицу ошибок, кривую ROC, кривую калибровки и распределение вероятностей.
   - **Прогнозирование**:
     - Введите значения признаков (например, Тип: L, Температура воздуха: 300.0 K, Температура процесса: 310.0 K, Скорость вращения: 1500 об/мин, Крутящий момент: 40.0 Нм, Износ инструмента: 0 мин).
     - Нажмите "Спрогнозировать" для получения результата (Отказ/Нет отказа) и вероятности отказа.
4. **Презентация**:
   - Перейдите на страницу "Презентация" для просмотра слайдов с описанием проекта.
   - Используйте стрелки или свайп для навигации по слайдам.
   - Настройте тему, высоту слайдов, переходы и плагины через интерфейс.

## Структура проекта
- **`app.py`**: Основной файл приложения, определяет навигацию между страницами "Анализ и модель" и "Презентация".
- **`analysis_and_model.py`**: Реализует страницу для загрузки данных, предобработки, обучения моделей, оценки и прогнозирования. Использует датасет AI4I 2020, решает проблему экстремальных вероятностей с помощью Borderline-SMOTE, сигмоидной калибровки и сглаживания.
- **`presentation.py`**: Реализует страницу с презентацией проекта в виде слайдов, используя `streamlit-reveal-slides`. Содержит введение, описание данных, этапы работы, результаты и заключение.
- **`requirements.txt`**: Список зависимостей для установки.

## Особенности реализации
- **Обработка дисбаланса**: Датасет имеет ~3.5% записей с отказами (339/10,000). Применяется Borderline-SMOTE и случайное недоразбиение для балансировки классов.
- **Калибровка вероятностей**: Сигмоидная калибровка (15 фолдов) для всех моделей (Логистическая регрессия, Случайный лес, XGBoost, SVM) обеспечивает надежные вероятности.
- **Сглаживание вероятностей**: Применяется сглаживание (1e-3) для предотвращения экстремальных вероятностей (0.0 или 1.0).
- **Динамический порог предупреждения**: Для безопасных входных данных (например, низкий износ инструмента) порог предупреждения снижен до 0.0001, для рискованных — повышен до 0.01.
- **Интерфейс на русском**: Все элементы интерфейса (заголовки, метки, сообщения об ошибках) на русском языке для удобства пользователей.

## Ожидаемые результаты
- **Загрузка данных**: Датасет загружается без ошибок, отображаются первые строки и информация о пропущенных значениях.
- **Обучение моделей**:
  - Точность: >0.90
  - ROC-AUC: >0.90
  - Полнота для класса отказов: >0.60
- **Прогнозирование**:
  - Для входных данных (Тип: L, Температура воздуха: 300.0 K, Температура процесса: 310.0 K, Скорость вращения: 1500 об/мин, Крутящий момент: 40.0 Нм, Износ инструмента: 0 мин):
    - Прогноз: Нет отказа
    - Вероятность отказа: 0.01–0.05 (например, 0.025)
    - Предупреждение отсутствует (вероятность >0.0001)
- **Презентация**: Слайды отображаются корректно с настраиваемыми параметрами.

## Устранение неполадок
Если возникают проблемы:
1. **Предупреждение "Модель очень уверена в этом прогнозе"**:
   - Убедитесь, что входные данные корректны.
   - Проверьте отчет по классификации (раздел "Результаты Оценки Модели") на предмет низкой полноты для класса отказов.
   - Увеличьте сглаживание, изменив в `analysis_and_model.py`:
     ```python
     smoothed_proba = (prediction_proba + 1e-2) / (1 + 2e-2)
     ```
2. **Ошибка загрузки датасета**:
   - Проверьте наличие всех обязательных столбцов в CSV.
   - Для UCI проверьте подключение к интернету.
3. **Презентация не отображается**:
   - Убедитесь, что `streamlit-reveal-slides` установлена (`pip install streamlit-reveal-slides`).
   - Проверьте наличие ошибок в консоли.

## Будущие улучшения
- Добавление подбора гиперпараметров для моделей.
- Интеграция дополнительных алгоритмов (например, нейронные сети).
- Расширение презентации с интерактивными графиками.
- Поддержка других языков интерфейса.

## Автор
Проект разработан в рамках учебного задания по машинному обучению, соответствующего требованиям документа `FinalWorkBase.pdf`.

---

**Контакты для обратной связи**: [вставьте ваш email или другие контакты, если требуется].